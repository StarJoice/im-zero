// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	friend "im-zero/app/friend/cmd/api/internal/handler/friend"
	"im-zero/app/friend/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 拉黑用户
				Method:  http.MethodPost,
				Path:    "/block",
				Handler: friend.BlockUserHandler(serverCtx),
			},
			{
				// 获取黑名单
				Method:  http.MethodPost,
				Path:    "/blocklist",
				Handler: friend.GetBlockListHandler(serverCtx),
			},
			{
				// 删除好友
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: friend.DeleteFriendHandler(serverCtx),
			},
			{
				// 获取好友列表
				Method:  http.MethodPost,
				Path:    "/list",
				Handler: friend.GetFriendListHandler(serverCtx),
			},
			{
				// 处理好友请求
				Method:  http.MethodPost,
				Path:    "/request/handle",
				Handler: friend.HandleFriendRequestHandler(serverCtx),
			},
			{
				// 获取好友请求列表
				Method:  http.MethodPost,
				Path:    "/request/list",
				Handler: friend.GetFriendRequestsHandler(serverCtx),
			},
			{
				// 发送好友请求
				Method:  http.MethodPost,
				Path:    "/request/send",
				Handler: friend.SendFriendRequestHandler(serverCtx),
			},
			{
				// 搜索用户
				Method:  http.MethodPost,
				Path:    "/search",
				Handler: friend.SearchUsersHandler(serverCtx),
			},
			{
				// 取消拉黑
				Method:  http.MethodPost,
				Path:    "/unblock",
				Handler: friend.UnblockUserHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/friend/v1"),
	)
}
