// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	group "im-zero/app/group/cmd/api/internal/handler/group"
	"im-zero/app/group/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 创建群组
				Method:  http.MethodPost,
				Path:    "/create",
				Handler: group.CreateGroupHandler(serverCtx),
			},
			{
				// 解散群组
				Method:  http.MethodPost,
				Path:    "/dissolve",
				Handler: group.DissolveGroupHandler(serverCtx),
			},
			{
				// 获取群组信息
				Method:  http.MethodPost,
				Path:    "/info",
				Handler: group.GetGroupInfoHandler(serverCtx),
			},
			{
				// 邀请用户入群
				Method:  http.MethodPost,
				Path:    "/invite",
				Handler: group.InviteUsersHandler(serverCtx),
			},
			{
				// 退出群组
				Method:  http.MethodPost,
				Path:    "/leave",
				Handler: group.LeaveGroupHandler(serverCtx),
			},
			{
				// 禁言群成员
				Method:  http.MethodPost,
				Path:    "/member/mute",
				Handler: group.MuteMembersHandler(serverCtx),
			},
			{
				// 设置群成员角色
				Method:  http.MethodPost,
				Path:    "/member/role",
				Handler: group.SetMemberRoleHandler(serverCtx),
			},
			{
				// 获取群成员列表
				Method:  http.MethodPost,
				Path:    "/members",
				Handler: group.GetGroupMembersHandler(serverCtx),
			},
			{
				// 获取群聊记录
				Method:  http.MethodPost,
				Path:    "/message/history",
				Handler: group.GetGroupHistoryHandler(serverCtx),
			},
			{
				// 群组消息发送
				Method:  http.MethodPost,
				Path:    "/message/send",
				Handler: group.SendGroupMessageHandler(serverCtx),
			},
			{
				// 获取我的群组列表
				Method:  http.MethodPost,
				Path:    "/my",
				Handler: group.GetMyGroupsHandler(serverCtx),
			},
			{
				// 踢出群成员
				Method:  http.MethodPost,
				Path:    "/remove",
				Handler: group.RemoveMembersHandler(serverCtx),
			},
			{
				// 更新群组信息
				Method:  http.MethodPost,
				Path:    "/update",
				Handler: group.UpdateGroupHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/group/v1"),
	)
}
