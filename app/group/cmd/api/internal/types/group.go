// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package types

type CreateGroupReq struct {
	Name         string  `json:"name"`
	Avatar       string  `json:"avatar,optional"`
	Description  string  `json:"description,optional"`
	MemberIds    []int64 `json:"memberIds,optional"` // 初始成员
	IsPrivate    bool    `json:"isPrivate,optional"`
	JoinApproval bool    `json:"joinApproval,optional"`
}

type CreateGroupResp struct {
	Group GroupInfo `json:"group"`
}

type DissolveGroupReq struct {
	GroupId int64 `json:"groupId"`
}

type DissolveGroupResp struct {
	Success bool `json:"success"`
}

type GetGroupHistoryReq struct {
	GroupId       int64 `json:"groupId"`
	LastMessageId int64 `json:"lastMessageId,optional"`
	Limit         int32 `json:"limit,optional,range=[1:100]"`
}

type GetGroupHistoryResp struct {
	Messages []GroupMessage `json:"messages"`
	HasMore  bool           `json:"hasMore"`
}

type GetGroupInfoReq struct {
	GroupId int64 `json:"groupId"`
}

type GetGroupInfoResp struct {
	Group  GroupInfo `json:"group"`
	MyRole int32     `json:"myRole"`
}

type GetGroupMembersReq struct {
	GroupId int64 `json:"groupId"`
	Role    int32 `json:"role,optional"` // 筛选角色
	Page    int32 `json:"page,optional,range=[1:]"`
	Limit   int32 `json:"limit,optional,range=[1:100]"`
}

type GetGroupMembersResp struct {
	Members []GroupMember `json:"members"`
	Total   int32         `json:"total"`
}

type GetMyGroupsReq struct {
	Page  int32 `json:"page,optional,range=[1:]"`
	Limit int32 `json:"limit,optional,range=[1:50]"`
}

type GetMyGroupsResp struct {
	Groups []GroupInfo `json:"groups"`
	Total  int32       `json:"total"`
}

type InviteUsersReq struct {
	GroupId int64   `json:"groupId"`
	UserIds []int64 `json:"userIds"`
}

type InviteUsersResp struct {
	SuccessCount int32   `json:"successCount"`
	FailedUsers  []int64 `json:"failedUsers,optional"`
}

type LeaveGroupReq struct {
	GroupId int64 `json:"groupId"`
}

type LeaveGroupResp struct {
	Success bool `json:"success"`
}

type MuteMembersReq struct {
	GroupId  int64   `json:"groupId"`
	UserIds  []int64 `json:"userIds"`
	Duration int64   `json:"duration"` // 禁言时长(秒)，0表示解除禁言
}

type MuteMembersResp struct {
	SuccessCount int32   `json:"successCount"`
	FailedUsers  []int64 `json:"failedUsers,optional"`
}

type RemoveMembersReq struct {
	GroupId int64   `json:"groupId"`
	UserIds []int64 `json:"userIds"`
}

type RemoveMembersResp struct {
	SuccessCount int32   `json:"successCount"`
	FailedUsers  []int64 `json:"failedUsers,optional"`
}

type SendGroupMessageReq struct {
	GroupId     int64  `json:"groupId"`
	MessageType int32  `json:"messageType"`
	Content     string `json:"content"`
	Extra       string `json:"extra,optional"`
}

type SendGroupMessageResp struct {
	Message GroupMessage `json:"message"`
}

type SetMemberRoleReq struct {
	GroupId int64 `json:"groupId"`
	UserId  int64 `json:"userId"`
	Role    int32 `json:"role"` // 2:管理员 3:普通成员
}

type SetMemberRoleResp struct {
	Success bool `json:"success"`
}

type UpdateGroupReq struct {
	GroupId           int64  `json:"groupId"`
	Name              string `json:"name,optional"`
	Avatar            string `json:"avatar,optional"`
	Description       string `json:"description,optional"`
	Notice            string `json:"notice,optional"`
	JoinApproval      bool   `json:"joinApproval,optional"`
	AllowInvite       bool   `json:"allowInvite,optional"`
	AllowMemberModify bool   `json:"allowMemberModify,optional"`
}

type UpdateGroupResp struct {
	Success bool `json:"success"`
}
