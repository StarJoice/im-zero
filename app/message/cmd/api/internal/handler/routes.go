// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3

package handler

import (
	"net/http"

	message "im-zero/app/message/cmd/api/internal/handler/message"
	ws "im-zero/app/message/cmd/api/internal/handler/ws"
	"im-zero/app/message/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 获取最近对话列表
				Method:  http.MethodPost,
				Path:    "/conversations",
				Handler: message.GetConversationsHandler(serverCtx),
			},
			{
				// 删除消息
				Method:  http.MethodPost,
				Path:    "/delete",
				Handler: message.DeleteMessageHandler(serverCtx),
			},
			{
				// 获取聊天记录
				Method:  http.MethodPost,
				Path:    "/history",
				Handler: message.GetChatHistoryHandler(serverCtx),
			},
			{
				// 标记消息为已读
				Method:  http.MethodPost,
				Path:    "/read",
				Handler: message.MarkAsReadHandler(serverCtx),
			},
			{
				// 撤回消息
				Method:  http.MethodPost,
				Path:    "/recall",
				Handler: message.RecallMessageHandler(serverCtx),
			},
			{
				// 发送消息
				Method:  http.MethodPost,
				Path:    "/send",
				Handler: message.SendMessageHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/message/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// WebSocket连接
				Method:  http.MethodGet,
				Path:    "/ws",
				Handler: ws.WsConnectHandler(serverCtx),
			},
		},
		rest.WithPrefix("/message/v1"),
	)
}
