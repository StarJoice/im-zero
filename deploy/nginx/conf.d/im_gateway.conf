# WebSocket Connection 升级映射
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# 上游服务定义
upstream usercenter-api {
    server host.docker.internal:8080;
    keepalive 32;
}

upstream friend-api {
    server host.docker.internal:8002;
    keepalive 32;
}

upstream group-api {
    server host.docker.internal:8004;
    keepalive 32;
}

upstream message-api {
    server host.docker.internal:8005;
    keepalive 32;
}

upstream verifycode-api {
    server host.docker.internal:2004;
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;

    # 日志配置
    access_log /var/log/nginx/im_zero.com_access.log;
    error_log /var/log/nginx/im_zero.com_error.log;

    # CORS 全局配置
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    # 处理 OPTIONS 预检请求
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # 通用代理设置
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # 缓冲区配置
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # 超时配置
    proxy_connect_timeout 30s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # 根路径处理
    location = / {
        return 200 '{"message":"IM-Zero API Gateway","version":"v1.0","status":"running"}';
        add_header Content-Type application/json;
    }
    
    # 健康检查
    location = /health {
        return 200 '{"status":"healthy","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # API状态监控
    location = /api/status {
        return 200 '{"services":{"usercenter":"8080","friend":"8002","group":"8004","message":"8005","verifycode":"2004"},"gateway":"nginx","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # 限制访问的路径
    location ~* /\. {
        deny all;
        return 404;
    }
    
    # 静态资源缓存（如果有的话）
    location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 用户中心服务 (端口: 8080)
    location /usercenter/ {
        proxy_pass http://usercenter-api/usercenter/;
    }
    
    # 好友管理服务 (端口: 8002)
    location /friend/ {
        proxy_pass http://friend-api/friend/;
    }
    
    # 群组管理服务 (端口: 8004)
    location /group/ {
        proxy_pass http://group-api/group/;
    }
    
    # 验证码服务 (端口: 2004)
    location /verifycode/ {
        proxy_pass http://verifycode-api/verifycode/;
    }

    # 消息服务 (端口: 8005) - 支持WebSocket
    location /message/ {
        # WebSocket 特殊配置
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Origin "";
        
        # WebSocket 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 3600s;
        proxy_read_timeout 3600s;
        
        proxy_pass http://message-api/message/;
    }
}